server:
  port: 0 # port번호 0 : 랜덤 포트를 사용하겠다는 의미
  #port: 9001 #클라이언트 포트

spring:
  application:
    name: user-service #각각 마이크로 서비스마다 부여할 고유 아이디(중복 불가)  => 유레카에 대문자로 등록됨. (대소문자 구분x)
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console
#  datasource:  # 암호화 후 config server에 옮김
#    url: jdbc:h2:mem:testdb
#    driver-class-name: org.h2.Driver

 # rabbitmq 정보
  rabbitmq: #호스트 정보 기술 => ms는 클라이언트
    host: 127.0.0.1
    port: 5672 # 15672 는 rabbit mq 관리 페이지 접속용
    username: guest
    password: guest

#유레카 클라이언트 역할 기능 켜기
eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}} #인스턴스 id 부여해주기 (포트가 같을 때)
  client:
    register-with-eureka: true
    fetch-registry: true #서버로부터 인스턴스들의 정보를 주기적으로 가져올 것인지?
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka  #유레카 서버의 위치를 등록함


greeting:
  message: Welcome to the Simple E-commerce.

logging:
  level:
    com.example.duserservice : info



#token:
#  expiration_time: 86400000  #하루짜리 토큰
#  secret:user_token

#actuator 엔드 포인트를 더 사용하기 위해 추가  /actuator/refresh
management:
  endpoints:
    web:
      exposure:
        include: refresh , health , beans , busrefresh


